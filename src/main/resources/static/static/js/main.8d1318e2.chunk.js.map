{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJwtToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/CreateProjectTaskButton.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","reducers/errorReducer.js","store.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","handleDeleteClick","id","props","deleteProject","this","key","className","projectName","description","style","width","margin","to","projectIdentifier","onClick","bind","renderProjects","Component","connect","window","confirm","delete","CreateProjectButton","Dashboard","getProjects","projects","textAlign","map","get","res","setJwtToken","token","defaults","headers","common","logout","dipatch","localStorage","removeItem","Header","e","security","validToken","class","user","fullname","data-toggle","data-target","aria-controls","aria-expanded","aria-label","checkLoggedIn","AddProject","state","start_date","end_date","onChange","onSubmit","setState","target","name","value","preventDefault","newProject","errors","classnames","placeholder","UpdateProject","updateProject","nextProps","match","params","getProject","readOnly","CreateProjectTaskButton","ProjectTask","handleDelete","project_sequence","deleteProjectTask","priorityString","priorityClass","projectTask","projectSequence","summary","acceptanceCriteria","priority","backlog_id","Backlog","getBacklog","projectTasks","filter","status","renderTodoTask","renderInProgressTask","renderDoneTask","backlog","ProjectBoard","projectNotFound","role","initialstate","initialState","actionPayload","combineReducers","action","middleware","thunk","reactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","updatedProjectTask","updateProjectTask","getProjectTask","patch","Landing","Register","username","password","confirmPassword","console","log","createNewUser","newUser","Login","loginRequest","login","renderAlert","renderInvalidUsername","renderInvalidPassword","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","getItem","currentTime","Date","now","exp","location","href","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wSAAaA,EAAa,aCGbC,EAAgB,SAACC,EAASC,GAAV,8CAAsB,WAAMC,GAAN,SAAAC,EAAA,+EAEzCC,IAAMC,KAAK,eAAgBL,GAFc,OAI/CC,EAAQK,KAAK,cACbJ,EAAS,CAAEK,KAAMT,EAAYU,QAAS,KALS,gDAO/CN,EAAS,CAAEK,KAAMT,EAAYU,QAAS,KAAMC,SAASC,OAPN,yDAAtB,uDCEvBC,E,2MACJC,kBAAoB,SAAAC,GAClB,EAAKC,MAAMC,cAAcF,I,gFAET,IACRb,EAAYgB,KAAKF,MAAjBd,QACR,OACE,yBAAKiB,IAAKjB,EAAQa,GAAIK,UAAU,sBAC9B,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAclB,EAAQmB,aACpC,uBAAGD,UAAU,aAAalB,EAAQoB,aAClC,uBAAGF,UAAU,aACX,2BAAOA,UAAU,cAAjB,8BAIN,yBAAKA,UAAU,YACb,yBACEA,UAAU,OACVG,MAAO,CAAEC,MAAO,QAASC,OAAQ,cAEjC,wBAAIL,UAAU,+BACZ,kBAAC,IAAD,CAAMM,GAAE,wBAAmBxB,EAAQyB,oBACjC,wBAAIP,UAAU,iCACZ,uBAAGA,UAAU,0BADf,mBAIF,kBAAC,IAAD,CAAMM,GAAE,yBAAoBxB,EAAQyB,oBAClC,wBAAIP,UAAU,iCACZ,uBAAGA,UAAU,gBADf,yBAIF,kBAAC,IAAD,CAAMM,GAAG,KACP,wBACEN,UAAU,+BACVQ,QAASV,KAAKJ,kBAAkBe,KAC9BX,KACAhB,EAAQyB,oBAGV,uBAAGP,UAAU,wBAPf,2B,+BAkBd,OAAO,6BAAMF,KAAKY,sB,GArDIC,aAyDXC,cAAQ,KAAM,CAAEf,cDhCF,SAACF,EAAIZ,GAAL,8CAAiB,WAAMC,GAAN,SAAAC,EAAA,0DAE1C4B,OAAOC,QACL,kEAHwC,gCAMpC5B,IAAM6B,OAAN,uBAA6BpB,IANO,OAQ1CX,EAAS,CAAEK,KDnCe,iBCmCOC,QAASK,IARA,2CAAjB,wDCgCdiB,CAAiCnB,GChDjCuB,EAXa,WAC1B,OACE,yBAAKb,MAAO,CAAEE,OAAQ,kBACpB,kBAAC,IAAD,CAAMC,GAAG,cAAcN,UAAU,mBAAjC,oBAGA,+BCHAiB,E,4LAEFnB,KAAKF,MAAMsB,gB,+BAEH,IACAC,EAAarB,KAAKF,MAAMd,QAAxBqC,SACR,OACE,yBAAKnB,UAAU,aACb,wBAAIG,MAAO,CAAEiB,UAAW,SAAUf,OAAQ,cAA1C,YACA,kBAAC,EAAD,MACCc,EAASE,KAAI,SAAAvC,GAAO,OACnB,kBAAC,EAAD,CAAaiB,IAAKjB,EAAQa,GAAIb,QAASA,Y,GAXzB6B,aAqBTC,mBAHf,YACE,MAAO,CAAE9B,QAD2B,EAAXA,WAGa,CAAEoC,YHbf,yDAAM,WAAMlC,GAAN,eAAAC,EAAA,sEACbC,IAAMoC,IAAI,gBADG,OACzBC,EADyB,OAG/BvC,EAAS,CAAEK,KDhBe,eCgBKC,QAASiC,EAAI/B,OAHb,2CAAN,wDGaZoB,CAA0CK,G,iBClB1CO,EAPK,SAAAC,GACdA,EACFvC,IAAMwC,SAASC,QAAQC,OAAvB,cAAiDH,SAE1CvC,IAAMwC,SAASC,QAAQC,OAAvB,eCkCEC,EAAS,kBAAM,SAAAC,GAC1BC,aAAaC,WAAW,YACxBR,GAAY,GACZM,EAAQ,CAAEzC,KNpCoB,uBOF1B4C,E,gLACIC,GACNpC,KAAKF,MAAMiC,W,sCAGX,OAAI/B,KAAKF,MAAMuC,SAASC,WAEpB,yBAAKpC,UAAU,2BAA2BL,GAAG,0BAC3C,wBAAIK,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWM,GAAG,cAA9B,eAKJ,kBAAC,IAAD,CACEA,GAAG,IACHH,MAAO,CAAEE,OAAQ,oBACjBL,UAAU,kBAEV,uBAAGqC,MAAM,gBACT,mCACCvC,KAAKF,MAAMuC,SAASG,KAAKC,UAE5B,kBAAC,IAAD,CACEjC,GAAG,SACHN,UAAU,wBACVQ,QAASV,KAAKU,QAAQC,KAAKX,OAH7B,WAWF,6BACE,kBAAC,IAAD,CACEQ,GAAG,YACHH,MAAO,CAAEE,OAAQ,oBACjBL,UAAU,wBACVX,KAAK,UAJP,YAQA,kBAAC,IAAD,CAAMiB,GAAG,SAASN,UAAU,wBAAwBX,KAAK,UAAzD,Y,+BAQN,OACE,yBAAKW,UAAU,kDACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,eAAeM,GAAG,KAAlC,oCAGA,4BACEN,UAAU,iBACVX,KAAK,SACLmD,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAM5C,UAAU,yBAGjBF,KAAK+C,sB,GAtEKlC,aA+ENC,mBAHf,YACE,MAAO,CAAEuB,SAD4B,EAAZA,YAGa,CAAEN,UAA3BjB,CAAqCqB,G,uDC/E9Ca,E,YACJ,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACX9C,YAAa,GACbM,kBAAmB,GACnBL,YAAa,GACb8C,WAAY,GACZC,SAAU,IAGZ,EAAKC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,SAAW,EAAKA,SAAS1C,KAAd,gBAXJ,E,sEAaLyB,GACPpC,KAAKsD,SAAL,eAAiBlB,EAAEmB,OAAOC,KAAOpB,EAAEmB,OAAOE,U,+BAGnCrB,GACPA,EAAEsB,iBACF,IAAMC,EAAa,CACjBxD,YAAaH,KAAKiD,MAAM9C,YACxBM,kBAAmBT,KAAKiD,MAAMxC,kBAC9BL,YAAaJ,KAAKiD,MAAM7C,YACxB8C,WAAYlD,KAAKiD,MAAMC,WACvBC,SAAUnD,KAAKiD,MAAME,UAEvBnD,KAAKF,MAAMf,cAAc4E,EAAY3D,KAAKF,MAAMb,W,+BAGxC,IAAD,EACiDe,KAAKF,MAAM8D,OAA3DzD,EADD,EACCA,YAAaM,EADd,EACcA,kBAAmBL,EADjC,EACiCA,YACxC,OACE,yBAAKC,MAAO,CAAEC,MAAO,OAASJ,UAAU,aACtC,wBAAIG,MAAO,CAAEiB,UAAW,WAAxB,uBACA,6BACA,0BAAM+B,SAAUrD,KAAKqD,UACnB,yBAAKnD,UAAU,cACb,2BACEX,KAAK,OACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAc1D,IAEhB2D,YAAY,eACZN,KAAK,cACLC,MAAOzD,KAAKiD,MAAM9C,YAClBiD,SAAUpD,KAAKoD,WAEjB,2BAAOlD,UAAU,8BAA8BC,IAEjD,yBAAKD,UAAU,cACb,2BACEX,KAAK,OACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAcpD,IAEhBqD,YAAY,oBACZN,KAAK,oBACLC,MAAOzD,KAAKiD,MAAMxC,kBAClB2C,SAAUpD,KAAKoD,WAEjB,2BAAOlD,UAAU,8BACdO,IAGL,yBAAKP,UAAU,cACb,8BACEX,KAAK,OACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAczD,IAEhB0D,YAAY,sBACZN,KAAK,cACLC,MAAOzD,KAAKiD,MAAM7C,YAClBgD,SAAUpD,KAAKoD,WAEjB,2BAAOlD,UAAU,8BAA8BE,IAEjD,yBAAKF,UAAU,cACb,6CACA,2BACEX,KAAK,OACLW,UAAU,eACVsD,KAAK,aACLC,MAAOzD,KAAKiD,MAAMC,WAClBE,SAAUpD,KAAKoD,YAGnB,yBAAKlD,UAAU,cACb,qDACA,2BACEX,KAAK,OACLW,UAAU,eACVsD,KAAK,WACLC,MAAOzD,KAAKiD,MAAME,SAClBC,SAAUpD,KAAKoD,YAInB,4BAAQ7D,KAAK,SAASW,UAAU,mBAAhC,gB,GAnGeW,aAgHVC,mBAJf,YACE,MAAO,CAAE8C,OAD0B,EAAVA,UAIa,CAAE7E,iBAA3B+B,CAA4CkC,GChHrDe,E,YACJ,aAAe,IAAD,8BACZ,+CACKd,MAAQ,CACXpD,GAAI,GACJM,YAAa,GACbM,kBAAmB,GACnBL,YAAa,GACb8C,WAAY,GACZC,SAAU,IAGZ,EAAKC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,SAAW,EAAKA,SAAS1C,KAAd,gBAZJ,E,sEAeLyB,GACPpC,KAAKsD,SAAL,eACGlB,EAAEmB,OAAOC,KAAOpB,EAAEmB,OAAOE,U,+BAIrBrB,GACPA,EAAEsB,iBACF,IAAMM,EAAgB,CACpBnE,GAAIG,KAAKiD,MAAMpD,GACfM,YAAaH,KAAKiD,MAAM9C,YACxBM,kBAAmBT,KAAKiD,MAAMxC,kBAC9BL,YAAaJ,KAAKiD,MAAM7C,YACxB8C,WAAYlD,KAAKiD,MAAMC,WACvBC,SAAUnD,KAAKiD,MAAME,UAEvBnD,KAAKF,MAAMf,cAAciF,EAAehE,KAAKF,MAAMb,W,gDAE3BgF,GAAY,IAAD,EAQ/BA,EAAUjF,QAAQA,QANpBa,EAFiC,EAEjCA,GACAM,EAHiC,EAGjCA,YACAM,EAJiC,EAIjCA,kBACAL,EALiC,EAKjCA,YACA8C,EANiC,EAMjCA,WACAC,EAPiC,EAOjCA,SAGFnD,KAAKsD,SAAS,CACZzD,KACAM,cACAM,oBACAL,cACA8C,aACAC,e,0CAGiB,IACXtD,EAAOG,KAAKF,MAAMoE,MAAMC,OAAxBtE,GACRG,KAAKF,MAAMsE,WAAWvE,EAAIG,KAAKF,MAAMb,W,+BAE7B,IAAD,EAC8Be,KAAKF,MAAM8D,OAAxCzD,EADD,EACCA,YAAaC,EADd,EACcA,YACrB,OACE,yBAAKC,MAAO,CAAEC,MAAO,OAASJ,UAAU,aACtC,wBAAIG,MAAO,CAAEiB,UAAW,WAAxB,uBACA,6BACA,0BAAM+B,SAAUrD,KAAKqD,UACnB,yBAAKnD,UAAU,cACb,2BACEX,KAAK,OACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAc1D,IAEhB2D,YAAY,eACZN,KAAK,cACLC,MAAOzD,KAAKiD,MAAM9C,YAClBiD,SAAUpD,KAAKoD,WAEjB,2BAAOlD,UAAU,8BAA8BC,IAEjD,yBAAKD,UAAU,cACb,2BACEX,KAAK,OACLW,UAAU,eACV4D,YAAY,oBACZN,KAAK,oBACLC,MAAOzD,KAAKiD,MAAMxC,kBAClB4D,UAAQ,KAGZ,yBAAKnE,UAAU,cACb,8BACEX,KAAK,OACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAczD,IAEhB0D,YAAY,sBACZN,KAAK,cACLC,MAAOzD,KAAKiD,MAAM7C,YAClBgD,SAAUpD,KAAKoD,WAEjB,2BAAOlD,UAAU,8BAA8BE,IAEjD,yBAAKF,UAAU,cACb,6CACA,2BACEX,KAAK,OACLW,UAAU,eACVsD,KAAK,aACLC,MAAOzD,KAAKiD,MAAMC,WAClBE,SAAUpD,KAAKoD,YAGnB,yBAAKlD,UAAU,cACb,qDACA,2BACEX,KAAK,OACLW,UAAU,eACVsD,KAAK,WACLC,MAAOzD,KAAKiD,MAAME,SAClBC,SAAUpD,KAAKoD,YAInB,4BAAQ7D,KAAK,SAASW,UAAU,mBAAhC,gB,GAzHkBW,aAsIbC,mBAJf,YACE,MAAO,CAAE8C,OADmC,EAAnBA,OACR5E,QAD2B,EAAXA,WAIK,CAAEoF,WRvHhB,SAACvE,EAAIZ,GAAL,8CAAiB,WAAMC,GAAN,eAAAC,EAAA,+EAErBC,IAAMoC,IAAN,uBAA0B3B,IAFL,OAEjC4B,EAFiC,OAIvCvC,EAAS,CAAEK,KDtBY,cCsBOC,QAASiC,EAAI/B,OAJJ,gDAMvCT,EAAQK,KAAK,cAN0B,yDAAjB,uDQuH4BP,iBAAvC+B,CACbiD,GC/HaO,EAViB,SAAAxE,GAC9B,OACE,yBAAKO,MAAO,CAAEE,OAAQ,cACpB,kBAAC,IAAD,CAAMC,GAAE,0BAAqBV,EAAMD,IAAMK,UAAU,mBACjD,uBAAGA,UAAU,uBADf,wBAGA,+BCJAqE,E,2MACJC,aAAe,SAAC3E,EAAI4E,GAClB,EAAK3E,MAAM4E,kBAAkB7E,EAAI4E,I,wEAEzB,IAQJE,EACAC,EATG,EAOH5E,KAAKF,MAAM+E,YALbC,EAFK,EAELA,gBACAC,EAHK,EAGLA,QACAC,EAJK,EAILA,mBACAC,EALK,EAKLA,SACAxE,EANK,EAMLA,kBAcF,OAViB,IAAbwE,GACFL,EAAgB,uBAChBD,EAAiB,QACK,IAAbM,GACTL,EAAgB,wBAChBD,EAAiB,WAEjBC,EAAgB,wBAChBD,EAAiB,OAGjB,yBAAKzE,UAAU,sBACb,yBAAKA,UAAS,sBAAiB0E,IAA/B,OACOE,EADP,iBACsCH,GAEtC,yBAAKzE,UAAU,aACb,wBAAIA,UAAU,cAAc6E,GAC5B,uBAAG7E,UAAU,aAAa8E,GAC1B,kBAAC,IAAD,CACExE,GAAE,6BAAwBR,KAAKF,MAAMD,GAAnC,YAAyCiF,GAC3C5E,UAAU,6BAFZ,UAMA,kBAAC,IAAD,CACEM,GAAG,IACHN,UAAU,4BACVQ,QAASV,KAAKwE,aAAa7D,KACzBX,KACAS,EACAqE,IANJ,gB,GAtCgBjE,aAsDXC,cAAQ,KAAM,CAAE4D,kBCUE,SAC/BQ,EACAT,GAF+B,8CAG5B,WAAMvF,GAAN,SAAAC,EAAA,sEACGC,IAAM6B,OAAN,uBAA6BiE,EAA7B,YAA2CT,IAD9C,OAEHvF,EAAS,CAAEK,KZpEsB,sBYoEKC,QAASiF,IAF5C,2CAH4B,wDDVlB3D,CAAqCyD,GEtD9CY,E,4LAEFnF,KAAKF,MAAMsF,WAAWpF,KAAKF,MAAMD,GAAIG,KAAKF,MAAMb,W,uCAEhC,IAAD,OAIf,OAHce,KAAKF,MAAMuF,aAAaC,QACpC,SAAAT,GAAW,MAA2B,UAAvBA,EAAYU,UAEhBhE,KAAI,SAAAsD,GAAW,OAC1B,kBAAC,EAAD,CACE5E,IAAK4E,EAAYhF,GACjBA,GAAI,EAAKC,MAAMD,GACfgF,YAAaA,S,6CAKK,IAAD,OAIrB,OAHc7E,KAAKF,MAAMuF,aAAaC,QACpC,SAAAT,GAAW,MAA2B,gBAAvBA,EAAYU,UAEhBhE,KAAI,SAAAsD,GAAW,OAC1B,kBAAC,EAAD,CACE5E,IAAK4E,EAAYhF,GACjBA,GAAI,EAAKC,MAAMD,GACfgF,YAAaA,S,uCAKD,IAAD,OAIf,OAHc7E,KAAKF,MAAMuF,aAAaC,QACpC,SAAAT,GAAW,MAA2B,SAAvBA,EAAYU,UAEhBhE,KAAI,SAAAsD,GAAW,OAC1B,kBAAC,EAAD,CACE5E,IAAK4E,EAAYhF,GACjBA,GAAI,EAAKC,MAAMD,GACfgF,YAAaA,S,+BAKjB,OACE,yBAAK3E,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,iDAAf,UAIDF,KAAKwF,kBAER,yBAAKtF,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,iDAAf,gBAIDF,KAAKyF,wBAER,yBAAKvF,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,iDAAf,SAIDF,KAAK0F,uB,GAnEM7E,aA6EPC,mBAJf,YACE,MAAO,CAAEuE,aAD6C,EAA7BM,QAAWN,gBAIE,CAAED,WD3DhB,SAACF,EAAYjG,GAAb,8CAAyB,WAAMC,GAAN,eAAAC,EAAA,+EAE7BC,IAAMoC,IAAN,uBAA0B0D,IAFG,OAEzCzD,EAFyC,OAI/CvC,EAAS,CAAEK,KZvBY,cYuBOC,QAASiC,EAAI/B,OAC3CR,EAAS,CAAEK,KAAMT,EAAYU,QAAS,KALS,gDAO/CN,EAAS,CAAEK,KAAMT,EAAYU,QAAS,KAAMC,SAASC,OAPN,yDAAzB,wDC2DXoB,CAAyCqE,GC7ElDS,E,iLACM,IAAD,OACC/F,EAAOG,KAAKF,MAAMoE,MAAMC,OAAxBtE,GAaR,OACE,yBAAKK,UAAU,aACb,kBAAC,EAAD,CAAyBL,GAAIA,IAb3B,EAAKC,MAAM8D,OAAOiC,gBAElB,yBAAK3F,UAAU,qBAAqB4F,KAAK,SACtC,EAAKhG,MAAM8D,OAAOiC,iBAIhB,kBAAC,EAAD,CAAShG,GAAIA,EAAIZ,QAAS,EAAKa,MAAMb,e,GAXzB4B,aA0BZC,mBAHf,YACE,MAAO,CAAE8C,OADyB,EAAVA,UAGX9C,CAAwB8E,G,wBC7BjCG,EAAe,CACnB1E,SAAU,GACVrC,QAAS,ICELgH,EAAe,CACnBX,aAAc,GACdR,YAAa,ICNTmB,EAAe,CACnBxD,KAAM,GACNF,YAAY,GAGR2D,GAAgB,SAAAzG,GACpB,QAAIA,GCFS0G,eAAgB,CAC7BtC,OCLa,WAA8B,IAArBX,EAAoB,uDAAZ,GAAIkD,EAAQ,uCAC1C,OAAQA,EAAO5G,MACb,KAAKT,EACH,OAAOqH,EAAO3G,SAAW,GAE3B,QACE,OAAOyD,IDAXjE,QHFa,WAAwC,IAA/BiE,EAA8B,uDAAtB8C,EAAcI,EAAQ,uCACpD,OAAQA,EAAO5G,MACb,IfPwB,eeQtB,OAAO,eACF0D,EADL,CAEE5B,SAAU8E,EAAO3G,UAErB,IfXuB,ceYrB,OAAO,eACFyD,EADL,CAEEjE,QAASmH,EAAO3G,UAEpB,Iff0B,iBegBxB,OAAO,eACFyD,EADL,CAEE5B,SAAU4B,EAAM5B,SAASiE,QACvB,SAAAtG,GAAO,OAAIA,EAAQyB,oBAAsB0F,EAAO3G,aAGtD,QACE,OAAOyD,IGjBX0C,QFEa,WAAwC,IAA/B1C,EAA8B,uDAAtB+C,EAAcG,EAAQ,uCACpD,OAAQA,EAAO5G,MACb,IhBTuB,cgBUrB,OAAO,eACF0D,EADL,CAEEoC,aAAcc,EAAO3G,UAEzB,IhBb4B,mBgBc1B,OAAO,eACFyD,EADL,CAEE4B,YAAasB,EAAO3G,UAExB,IhBjB+B,sBgBkB7B,OAAO,eACFyD,EADL,CAEEoC,aAAcpC,EAAMoC,aAAaC,QAC/B,SAAAT,GAAW,OAAIA,EAAYC,kBAAoBqB,EAAO3G,aAG5D,QACE,OAAOyD,IErBXZ,SDGa,WAAwC,IAA/BY,EAA8B,uDAAtB+C,EAAcG,EAAQ,uCACpD,OAAQA,EAAO5G,MACb,IjBR4B,mBiBS1B,OAAO,eACF0D,EADL,CAEEX,WAAY2D,GAAcE,EAAO3G,SACjCgD,KAAM2D,EAAO3G,UAEjB,QACE,OAAOyD,MGlBP+C,GAAe,GACfI,GAAa,CAACC,KAGdC,GACJvF,OAAOwF,8BAAgCxF,OAAOwF,+BAejCC,GAbXzF,OAAO0F,UAAUC,UAAUC,SAAS,WAAaL,GAC3CM,YACNC,GACAb,GACAc,YAAQC,IAAe,WAAf,EAAmBX,IAAaE,KAGlCM,YACNC,GACAb,GACAc,YAAQC,IAAe,WAAf,EAAmBX,MCfzBY,G,YACJ,WAAYlH,GAAQ,IAAD,0BAETD,GADR,4CAAMC,KACcA,MAAMoE,MAAMC,OAAxBtE,GAFS,OAGjB,EAAKoD,MAAQ,CACX8B,QAAS,GACTC,mBAAoB,GACpBO,OAAQ,GACRN,SAAU,EACVgC,QAAS,GACTxG,kBAAmBZ,GAErB,EAAKuD,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,SAAW,EAAKA,SAAS1C,KAAd,gBAZC,E,sEAeVyB,GACPpC,KAAKsD,SAAL,eACGlB,EAAEmB,OAAOC,KAAOpB,EAAEmB,OAAOE,U,+BAIrBrB,GACPA,EAAEsB,eAAetB,GACjB,IAAM8E,EAAiB,CACrBnC,QAAS/E,KAAKiD,MAAM8B,QACpBC,mBAAoBhF,KAAKiD,MAAM+B,mBAC/BO,OAAQvF,KAAKiD,MAAMsC,OACnBN,SAAUjF,KAAKiD,MAAMgC,SACrBgC,QAASjH,KAAKiD,MAAMgE,QACpBxG,kBAAmBT,KAAKiD,MAAMxC,mBAEhCT,KAAKF,MAAMqH,eACTnH,KAAKiD,MAAMxC,kBACXyG,EACAlH,KAAKF,MAAMb,W,+BAGL,IACAY,EAAOG,KAAKF,MAAMoE,MAAMC,OAAxBtE,GACAkF,EAAY/E,KAAKF,MAAM8D,OAAvBmB,QACR,OACE,yBAAK1E,MAAO,CAAEC,MAAO,OAASJ,UAAU,aACtC,wBAAIG,MAAO,CAAEiB,UAAW,WAAxB,oBACA,6BACA,0BAAM+B,SAAUrD,KAAKqD,UACnB,yBAAKnD,UAAU,cACb,2BACEX,KAAK,OACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAckB,IAEhBjB,YAAY,uBACZN,KAAK,UACLC,MAAOzD,KAAKiD,MAAM8B,QAClB3B,SAAUpD,KAAKoD,WAEjB,2BAAOlD,UAAU,8BAA8B6E,IAEjD,yBAAK7E,UAAU,cACb,8BACEX,KAAK,OACLW,UAAU,eACV4D,YAAY,sBACZN,KAAK,qBACLC,MAAOzD,KAAKiD,MAAM+B,mBAClB5B,SAAUpD,KAAKoD,YAGnB,yBAAKlD,UAAU,cACb,2CACA,2BACEX,KAAK,OACLW,UAAU,eACVsD,KAAK,UACLC,MAAOzD,KAAKiD,MAAMgE,QAClB7D,SAAUpD,KAAKoD,YAGnB,yBAAKlD,UAAU,cACb,4BACEA,UAAU,eACVsD,KAAK,WACLC,MAAOzD,KAAKiD,MAAMgC,SAClB7B,SAAUpD,KAAKoD,UAEf,4BAAQK,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,OACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UAGJ,yBAAKvD,UAAU,cACb,4BACEA,UAAU,eACVsD,KAAK,SACLC,MAAOzD,KAAKiD,MAAMsC,OAClBnC,SAAUpD,KAAKoD,UAEf,4BAAQK,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAGJ,kBAAC,IAAD,CACEjD,GAAE,wBAAmBX,GACrBK,UAAU,8BAFZ,yBAMA,4BAAQX,KAAK,SAASW,UAAU,+BAAhC,gB,GA/GmBW,aA2HdC,oBAJf,YACE,MAAO,CAAE8C,OAD0B,EAAVA,UAIa,CAAEuD,eTzHZ,SAC5BjC,EACAL,EACA5F,GAH4B,8CAIzB,WAAMC,GAAN,SAAAC,EAAA,+EAEKC,IAAMC,KAAN,uBAA2B6F,GAAcL,GAF9C,OAID5F,EAAQK,KAAR,wBAA8B4F,IAC9BhG,EAAS,CAAEK,KAAMT,EAAYU,QAAS,KALrC,gDAODN,EAAS,CAAEK,KAAMT,EAAYU,QAAS,KAAMC,SAASC,OAPpD,yDAJyB,wDSyHfoB,CAA6CkG,ICxHtDI,G,YACJ,WAAYtH,GAAQ,IAAD,8BACjB,4CAAMA,KACDmD,MAAQ,CACXpD,GAAI,GACJiF,gBAAiB,GACjBC,QAAS,GACTC,mBAAoB,GACpBO,OAAQ,GACRN,SAAU,EACVgC,QAAS,GACTxG,kBAAmB,IAErB,EAAK2C,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,SAAW,EAAKA,SAAS1C,KAAd,gBAbC,E,sEAgBVyB,GACPA,EAAEsB,iBACF,IAAM2D,EAAqB,CACzBxH,GAAIG,KAAKiD,MAAMpD,GACfiF,gBAAiB9E,KAAKiD,MAAM6B,gBAC5BC,QAAS/E,KAAKiD,MAAM8B,QACpBC,mBAAoBhF,KAAKiD,MAAM+B,mBAC/BO,OAAQvF,KAAKiD,MAAMsC,OACnBN,SAAUjF,KAAKiD,MAAMgC,SACrBgC,QAASjH,KAAKiD,MAAMgE,QACpBxG,kBAAmBT,KAAKiD,MAAMxC,mBAGhCT,KAAKF,MAAMwH,kBACTD,EACArH,KAAKiD,MAAMxC,kBACXT,KAAKiD,MAAM6B,gBACX9E,KAAKF,MAAMb,W,+BAGNmD,GACPpC,KAAKsD,SAAL,eAAiBlB,EAAEmB,OAAOC,KAAOpB,EAAEmB,OAAOE,U,0CAEvB,IAAD,EACezD,KAAKF,MAAMoE,MAAMC,OAA1CtE,EADU,EACVA,GAAI4E,EADM,EACNA,iBACZzE,KAAKF,MAAMyH,eAAe1H,EAAI4E,EAAkBzE,KAAKF,MAAMb,W,gDAEnCgF,GAAY,IAAD,EAU/BA,EAAUY,YARZhF,EAFiC,EAEjCA,GACAiF,EAHiC,EAGjCA,gBACAC,EAJiC,EAIjCA,QACAC,EALiC,EAKjCA,mBACAO,EANiC,EAMjCA,OACAN,EAPiC,EAOjCA,SACAgC,EARiC,EAQjCA,QACAxG,EATiC,EASjCA,kBAEFT,KAAKsD,SAAS,CACZzD,KACAiF,kBACAC,UACAC,qBACAO,SACAN,WACAgC,UACAxG,wB,+BAGM,IACAZ,EAAOG,KAAKF,MAAMoE,MAAMC,OAAxBtE,GACAkF,EAAY/E,KAAKF,MAAM8D,OAAvBmB,QACR,OACE,yBAAK1E,MAAO,CAAEC,MAAO,OAASJ,UAAU,aACtC,wBAAIG,MAAO,CAAEiB,UAAW,WAAxB,uBACA,6BACA,0BAAM+B,SAAUrD,KAAKqD,UACnB,yBAAKnD,UAAU,cACb,2BACEX,KAAK,OACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAckB,IAEhBjB,YAAY,uBACZN,KAAK,UACLC,MAAOzD,KAAKiD,MAAM8B,QAClB3B,SAAUpD,KAAKoD,WAEjB,2BAAOlD,UAAU,8BAA8B6E,IAEjD,yBAAK7E,UAAU,cACb,8BACEX,KAAK,OACLW,UAAU,eACV4D,YAAY,sBACZN,KAAK,qBACLC,MAAOzD,KAAKiD,MAAM+B,mBAClB5B,SAAUpD,KAAKoD,YAGnB,yBAAKlD,UAAU,cACb,2CACA,2BACEX,KAAK,OACLW,UAAU,eACVsD,KAAK,UACLC,MAAOzD,KAAKiD,MAAMgE,QAClB7D,SAAUpD,KAAKoD,YAGnB,yBAAKlD,UAAU,cACb,4BACEA,UAAU,eACVsD,KAAK,WACLC,MAAOzD,KAAKiD,MAAMgC,SAClB7B,SAAUpD,KAAKoD,UAEf,4BAAQK,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,OACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UAGJ,yBAAKvD,UAAU,cACb,4BACEA,UAAU,eACVsD,KAAK,SACLC,MAAOzD,KAAKiD,MAAMsC,OAClBnC,SAAUpD,KAAKoD,UAEf,4BAAQK,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAGJ,kBAAC,IAAD,CACEjD,GAAE,wBAAmBX,GACrBK,UAAU,8BAFZ,yBAMA,4BAAQX,KAAK,SAASW,UAAU,+BAAhC,gB,GA3IsBW,aAsJjBC,oBAHf,YACE,MAAO,CAAE8C,OADoD,EAApCA,OACRiB,YAD4C,EAA5Bc,QAAWd,eAGN,CAAE0C,eV7HZ,SAC5BrC,EACAT,EACAxF,GAH4B,8CAIzB,WAAMC,GAAN,eAAAC,EAAA,+EAEiBC,IAAMoC,IAAN,uBACA0D,EADA,YACcT,IAH/B,OAEKhD,EAFL,OAMDvC,EAAS,CAAEK,KZvCiB,mBYuCOC,QAASiC,EAAI/B,OAN/C,gDAQDT,EAAQK,KAAR,wBAA8B4F,IAC9BhG,EAAS,CAAEK,KAAMT,EAAYU,QAAS,KAAMC,SAASC,OATpD,yDAJyB,uDU6H4B4H,kBV5GzB,SAC/BzC,EACAK,EACAT,EACAxF,GAJ+B,8CAK5B,WAAMC,GAAN,SAAAC,EAAA,+EAEKC,IAAMoI,MAAN,uBACYtC,EADZ,YAC0BT,GAC9BI,GAJD,OAMD5F,EAAQK,KAAR,wBAA8B4F,IAC9BhG,EAAS,CAAEK,KAAMT,EAAYU,QAAS,KAPrC,gDASDN,EAAS,CAAEK,KAAMT,EAAYU,QAAS,KAAMC,SAASC,OATpD,yDAL4B,wDU4GlBoB,CACbsG,IC/HaK,G,iLA5BX,OACE,yBAAKvH,UAAU,WACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,kBAAd,oCAGA,uBAAGA,UAAU,QAAb,gEAGA,6BACA,kBAAC,IAAD,CAAMM,GAAG,YAAYN,UAAU,+BAA/B,WAGA,kBAAC,IAAD,CAAMM,GAAG,SAASN,UAAU,iCAA5B,kB,GAlBMW,aCEhB6G,G,YACJ,aAAe,IAAD,8BACZ,+CACKzE,MAAQ,CACXR,SAAU,GACVkF,SAAU,GACVC,SAAU,GACVC,gBAAiB,IAEnB,EAAKzE,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,SAAW,EAAKA,SAAS1C,KAAd,gBATJ,E,iFAYRX,KAAKF,MAAMuC,SAASC,YACtBtC,KAAKF,MAAMb,QAAQK,KAAK,gB,+BAInB8C,GACPpC,KAAKsD,SAAL,eACGlB,EAAEmB,OAAOC,KAAOpB,EAAEmB,OAAOE,U,+BAIrBrB,GACPA,EAAEsB,iBACF,IAAMlB,EAAO,CACXC,SAAUzC,KAAKiD,MAAMR,SACrBkF,SAAU3H,KAAKiD,MAAM0E,SACrBC,SAAU5H,KAAKiD,MAAM2E,SACrBC,gBAAiB7H,KAAKiD,MAAM4E,iBAE9BC,QAAQC,IAAIvF,GACZxC,KAAKF,MAAMkI,cAAcxF,EAAMxC,KAAKF,MAAMb,W,+BAGlC,IAAD,EACmDe,KAAKF,MAAM8D,OAA7DgE,EADD,EACCA,SAAUnF,EADX,EACWA,SAAUkF,EADrB,EACqBA,SAAUE,EAD/B,EAC+BA,gBACtC,OACE,yBAAK3H,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,WACA,uBAAGA,UAAU,oBAAb,uBACA,0BAAMmD,SAAUrD,KAAKqD,UACnB,yBAAKnD,UAAU,cACb,2BACEX,KAAK,OACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAcpB,IAEhBqB,YAAY,YACZN,KAAK,WACLC,MAAOzD,KAAKiD,MAAMR,SAClBW,SAAUpD,KAAKoD,WAEjB,2BAAOlD,UAAU,8BAA8BuC,IAEjD,yBAAKvC,UAAU,cACb,2BACEX,KAAK,QACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAc8D,IAEhB7D,YAAY,gBACZN,KAAK,WACLC,MAAOzD,KAAKiD,MAAM0E,SAClBvE,SAAUpD,KAAKoD,WAEjB,2BAAOlD,UAAU,8BAA8ByH,IAEjD,yBAAKzH,UAAU,cACb,2BACEX,KAAK,WACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAc+D,IAEhB9D,YAAY,WACZN,KAAK,WACLC,MAAOzD,KAAKiD,MAAM2E,SAClBxE,SAAUpD,KAAKoD,WAEjB,2BAAOlD,UAAU,8BAA8B0H,IAEjD,yBAAK1H,UAAU,cACb,2BACEX,KAAK,WACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAcgE,IAEhB/D,YAAY,mBACZN,KAAK,kBACLC,MAAOzD,KAAKiD,MAAM4E,gBAClBzE,SAAUpD,KAAKoD,WAEjB,2BAAOlD,UAAU,8BACd2H,IAIL,4BAAQtI,KAAK,SAASW,UAAU,6BAAhC,kB,GApGSW,aAkHRC,oBAJf,YACE,MAAO,CAAE8C,OADoC,EAApBA,OACRvB,SAD4B,EAAZA,YAIK,CAAE2F,clBlHb,SAACC,EAAShJ,GAAV,8CAAsB,WAAMC,GAAN,SAAAC,EAAA,+EAEzCC,IAAMC,KAAK,sBAAuB4I,GAFO,OAG/ChJ,EAAQK,KAAK,UACbJ,EAAS,CAAEK,KAAMT,EAAYU,QAAS,KAJS,gDAM/CN,EAAS,CAAEK,KAAMT,EAAYU,QAAS,KAAMC,SAASC,OANN,yDAAtB,wDkBkHdoB,CAA4C4G,IClHrDQ,G,YACJ,aAAe,IAAD,8BACZ,+CACKjF,MAAQ,CACX0E,SAAU,GACVC,SAAU,IAEZ,EAAKxE,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAK0C,SAAW,EAAKA,SAAS1C,KAAd,gBAPJ,E,sEAULyB,GACPpC,KAAKsD,SAAL,eACGlB,EAAEmB,OAAOC,KAAOpB,EAAEmB,OAAOE,U,+BAIrBrB,GACPA,EAAEsB,iBACF,IAAMyE,EAAe,CACnBR,SAAU3H,KAAKiD,MAAM0E,SACrBC,SAAU5H,KAAKiD,MAAM2E,UAGvB5H,KAAKF,MAAMsI,MAAMD,K,0CAIbnI,KAAKF,MAAMuC,SAASC,YACtBtC,KAAKF,MAAMb,QAAQK,KAAK,gB,gDAIF2E,GACpBA,EAAU5B,SAASC,YACrBtC,KAAKF,MAAMb,QAAQK,KAAK,gB,oCAI1B,GAAmC,qBAA/BU,KAAKF,MAAM8D,OAAO+D,SACpB,OACE,yBAAKpF,MAAM,qBAAqBuD,KAAK,SAArC,+B,8CAQJ,GAAmC,qBAA/B9F,KAAKF,MAAM8D,OAAO+D,SACpB,OACE,2BAAOzH,UAAU,8BACdF,KAAKF,MAAM8D,OAAO+D,Y,8CAMzB,GAAmC,qBAA/B3H,KAAKF,MAAM8D,OAAO+D,SACpB,OACE,2BAAOzH,UAAU,8BACdF,KAAKF,MAAM8D,OAAOgE,Y,+BAMjB,IAAD,EACwB5H,KAAKF,MAAM8D,OAAlC+D,EADD,EACCA,SAAUC,EADX,EACWA,SAClB,OACE,yBAAK1H,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACZF,KAAKqI,cACN,wBAAInI,UAAU,yBAAd,SACA,0BAAMmD,SAAUrD,KAAKqD,UACnB,yBAAKnD,UAAU,cACb,2BACEX,KAAK,QACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAc8D,IAEhB7D,YAAY,gBACZN,KAAK,WACLC,MAAOzD,KAAKiD,MAAM0E,SAClBvE,SAAUpD,KAAKoD,WAEhBpD,KAAKsI,uBAER,yBAAKpI,UAAU,cACb,2BACEX,KAAK,WACLW,UAAW2D,IAAW,eAAgB,CACpC,aAAc+D,IAEhB9D,YAAY,WACZN,KAAK,WACLC,MAAOzD,KAAKiD,MAAM2E,SAClBxE,SAAUpD,KAAKoD,WAEhBpD,KAAKuI,uBAGR,4BAAQhJ,KAAK,SAASW,UAAU,6BAAhC,iB,GAvGMW,aAqHLC,oBAJf,YACE,MAAO,CAAEuB,SADoC,EAApBA,SACNuB,OAD0B,EAAVA,UAIG,CAAEwE,MnB3GrB,SAAAD,GAAY,8CAAI,WAAMjJ,GAAN,mBAAAC,EAAA,+EAEfC,IAAMC,KAAK,mBAAoB8I,GAFhB,QAE3B1G,EAF2B,QAGzB/B,MACEiC,EAAUF,EAAI/B,KAAdiC,MACRM,aAAauG,QAAQ,WAAY7G,GACjCD,EAAYC,GACN8G,EAAUC,IAAW/G,GAE3BzC,EAAS,CAAEK,KNjBe,mBMiBSC,QAASiJ,IAC5CvJ,EAAS,CAAEK,KAAMT,EAAYU,QAAS,MAEtCN,EAAS,CACPK,KAAMT,EACNU,QAAS,CACPmI,SAAU,mBACVC,SAAU,sBAhBiB,gDAqBjC1I,EAAS,CAAEK,KAAMT,EAAYU,QAAS,KAAMC,SAASC,OArBpB,yDAAJ,wDmB2GlBoB,CAAoCoH,I,SCtGpCpH,oBAHf,YACE,MAAO,CAAEuB,SAD4B,EAAZA,YAGZvB,EAhBM,SAAC,GAAD,IAAcD,EAAd,EAAG8H,UAAsBtG,EAAzB,EAAyBA,SAAauG,EAAtC,gDACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAA/I,GAAK,OACa,IAAxBuC,EAASC,WACP,kBAACzB,EAAcf,GAEf,kBAAC,IAAD,CAAUU,GAAG,kBCWfsI,GAAW7G,aAAa8G,QAAQ,YACtC,GAAID,GAAU,CACZpH,EAAYoH,IACZ,IAAML,GAAUC,IAAWI,IAC3BtC,GAAMtH,SAAS,CAAEK,K3BnBa,mB2BmBWC,QAASiJ,KAClD,IAAMO,GAAcC,KAAKC,MAAQ,IAC7BT,GAAQU,IAAMH,KAChBxC,GAAMtH,SAAS6C,KACfhB,OAAOqI,SAASC,KAAO,KAyCZC,OArCf,WACE,OACE,kBAAC,IAAD,CAAU9C,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,IAAIb,UAAWlB,KACjC,kBAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,YAAYb,UAAWjB,KACzC,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,SAASb,UAAWT,KACtC,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAcqB,OAAK,EAACC,KAAK,aAAab,UAAWxH,IACjD,kBAAC,GAAD,CAAcoI,OAAK,EAACC,KAAK,cAAcb,UAAW3F,IAClD,kBAAC,GAAD,CACEuG,OAAK,EACLC,KAAK,qBACLb,UAAW5E,IAEb,kBAAC,GAAD,CACEwF,OAAK,EACLC,KAAK,oBACLb,UAAW/C,IAEb,kBAAC,GAAD,CACE2D,OAAK,EACLC,KAAK,sBACLb,UAAW3B,KAEb,kBAAC,GAAD,CACEuC,OAAK,EACLC,KAAK,2CACLb,UAAWvB,SCnDHqC,QACW,cAA7B1I,OAAOqI,SAASM,UAEe,UAA7B3I,OAAOqI,SAASM,UAEhB3I,OAAOqI,SAASM,SAASxF,MACvB,2DCZNyF,IAASd,OAAO,kBAAC,GAAD,MAASe,SAASC,eAAe,SD6H3C,kBAAmBpD,WACrBA,UAAUqD,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtC,QAAQsC,MAAMA,EAAMC,c","file":"static/js/main.8d1318e2.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n\n    history.push(\"/dashboard\");\n    dispatch({ type: GET_ERRORS, payload: {} });\n  } catch (error) {\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project\");\n\n  dispatch({ type: GET_PROJECTS, payload: res.data });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n\n    dispatch({ type: GET_PROJECT, payload: res.data });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id, history) => async dispatch => {\n  if (\n    window.confirm(\n      \"Please confirm to delete the project and all the related tasks\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n\n    dispatch({ type: DELETE_PROJECT, payload: id });\n  }\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  handleDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n  renderProjects() {\n    const { project } = this.props;\n    return (\n      <div key={project.id} className=\"card mb-3 bg-light\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{project.projectName}</h5>\n              <p className=\"card-text\">{project.description}</p>\n              <p className=\"card-text\">\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\n              </p>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div\n              className=\"card\"\n              style={{ width: \"20rem\", margin: \"20px auto\" }}\n            >\n              <ul className=\"list-group list-group-flush\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item alert-primary\">\n                    <i className=\"fas fa-flag-checkered\"></i> Project Board\n                  </li>\n                </Link>\n                <Link to={`/updateproject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item alert-success\">\n                    <i className=\"fas fa-edit\"></i> Update Project Info\n                  </li>\n                </Link>\n                <Link to=\"#\">\n                  <li\n                    className=\"list-group-item alert-danger\"\n                    onClick={this.handleDeleteClick.bind(\n                      this,\n                      project.projectIdentifier\n                    )}\n                  >\n                    <i className=\"fas fa-minus-circle\"></i> Delete Project\n                  </li>\n                </Link>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  render() {\n    return <div>{this.renderProjects()}</div>;\n  }\n}\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <div style={{ margin: \"80px 0px auto\" }}>\n      <Link to=\"/addproject\" className=\"btn btn-primary\">\n        Create a Project\n      </Link>\n      <hr></hr>\n    </div>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"container\">\n        <h1 style={{ textAlign: \"center\", margin: \"30px auto\" }}>Projects</h1>\n        <CreateProjectButton />\n        {projects.map(project => (\n          <ProjectItem key={project.id} project={project} />\n        ))}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ project }) {\n  return { project };\n}\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from \"axios\";\n\nconst setJwtToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setJwtToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport jwt_decode from \"jwt-decode\";\nimport setJwtToken from \"../securityUtils/setJwtToken\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({ type: GET_ERRORS, payload: {} });\n  } catch (error) {\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const login = loginRequest => async dispatch => {\n  try {\n    const res = await axios.post(\"/api/users/login\", loginRequest);\n    if (res.data) {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      setJwtToken(token);\n      const decoded = jwt_decode(token);\n\n      dispatch({ type: SET_CURRENT_USER, payload: decoded });\n      dispatch({ type: GET_ERRORS, payload: {} });\n    } else {\n      dispatch({\n        type: GET_ERRORS,\n        payload: {\n          username: \"Invalid username\",\n          password: \"Invalid password\"\n        }\n      });\n    }\n  } catch (error) {\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const logout = () => dipatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJwtToken(false);\n  dipatch({ type: SET_CURRENT_USER });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  onClick(e) {\n    this.props.logout();\n  }\n  checkLoggedIn() {\n    if (this.props.security.validToken) {\n      return (\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to=\"/dashboard\">\n                Dashboard\n              </Link>\n            </li>\n          </ul>\n          <Link\n            to=\"#\"\n            style={{ margin: \"0px 10px 0px 0px\" }}\n            className=\"btn text-light\"\n          >\n            <i class=\"fas fa-user\"></i>\n            <span> </span>\n            {this.props.security.user.fullname}\n          </Link>\n          <Link\n            to=\"/login\"\n            className=\"btn btn-outline-light\"\n            onClick={this.onClick.bind(this)}\n          >\n            Logout\n          </Link>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Link\n            to=\"/register\"\n            style={{ margin: \"0px 10px 0px 0px\" }}\n            className=\"btn btn-outline-light\"\n            type=\"submit\"\n          >\n            Register\n          </Link>\n          <Link to=\"/login\" className=\"btn btn-outline-light\" type=\"submit\">\n            Login\n          </Link>\n        </div>\n      );\n    }\n  }\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <nav className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          {this.checkLoggedIn()}\n        </nav>\n      </nav>\n    );\n  }\n}\nfunction mapStateToProps({ security }) {\n  return { security };\n}\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\"\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { projectName, projectIdentifier, description } = this.props.errors;\n    return (\n      <div style={{ width: \"50%\" }} className=\"container\">\n        <h1 style={{ textAlign: \"center\" }}>Create Project Form</h1>\n        <hr></hr>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": projectName\n              })}\n              placeholder=\"Project Name\"\n              name=\"projectName\"\n              value={this.state.projectName}\n              onChange={this.onChange}\n            />\n            <small className=\"invalid-feedback form-text\">{projectName}</small>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": projectIdentifier\n              })}\n              placeholder=\"Unique Project ID\"\n              name=\"projectIdentifier\"\n              value={this.state.projectIdentifier}\n              onChange={this.onChange}\n            />\n            <small className=\"invalid-feedback form-text\">\n              {projectIdentifier}\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <textarea\n              type=\"text\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": description\n              })}\n              placeholder=\"Project Description\"\n              name=\"description\"\n              value={this.state.description}\n              onChange={this.onChange}\n            />\n            <small className=\"invalid-feedback form-text\">{description}</small>\n          </div>\n          <div className=\"form-group\">\n            <label>Start Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              name=\"start_date\"\n              value={this.state.start_date}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Estimated End Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              name=\"end_date\"\n              value={this.state.end_date}\n              onChange={this.onChange}\n            />\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ errors }) {\n  return { errors };\n}\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\"\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(updateProject, this.props.history);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n  render() {\n    const { projectName, description } = this.props.errors;\n    return (\n      <div style={{ width: \"50%\" }} className=\"container\">\n        <h1 style={{ textAlign: \"center\" }}>Update Project Form</h1>\n        <hr></hr>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": projectName\n              })}\n              placeholder=\"Project Name\"\n              name=\"projectName\"\n              value={this.state.projectName}\n              onChange={this.onChange}\n            />\n            <small className=\"invalid-feedback form-text\">{projectName}</small>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Unique Project ID\"\n              name=\"projectIdentifier\"\n              value={this.state.projectIdentifier}\n              readOnly\n            />\n          </div>\n          <div className=\"form-group\">\n            <textarea\n              type=\"text\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": description\n              })}\n              placeholder=\"Project Description\"\n              name=\"description\"\n              value={this.state.description}\n              onChange={this.onChange}\n            />\n            <small className=\"invalid-feedback form-text\">{description}</small>\n          </div>\n          <div className=\"form-group\">\n            <label>Start Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              name=\"start_date\"\n              value={this.state.start_date}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Estimated End Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              name=\"end_date\"\n              value={this.state.end_date}\n              onChange={this.onChange}\n            />\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ errors, project }) {\n  return { errors, project };\n}\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectTaskButton = props => {\n  return (\n    <div style={{ margin: \"20px auto\" }}>\n      <Link to={`/addProjectTask/${props.id}`} className=\"btn btn-primary\">\n        <i className=\"fas fa-plus-circle\"></i> Create Project Task\n      </Link>\n      <hr></hr>\n    </div>\n  );\n};\nexport default CreateProjectTaskButton;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\n\nclass ProjectTask extends Component {\n  handleDelete = (id, project_sequence) => {\n    this.props.deleteProjectTask(id, project_sequence);\n  };\n  render() {\n    const {\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      priority,\n      projectIdentifier\n    } = this.props.projectTask;\n    let priorityString;\n    let priorityClass;\n    if (priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"High\";\n    } else if (priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"Medium\";\n    } else {\n      priorityClass = \"bg-success text-light\";\n      priorityString = \"Low\";\n    }\n    return (\n      <div className=\"card bg-light mb-3\">\n        <div className={`card-header ${priorityClass}`}>\n          ID: {projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{summary}</h5>\n          <p className=\"card-text\">{acceptanceCriteria}</p>\n          <Link\n            to={`/updateProjectTask/${this.props.id}/${projectSequence}`}\n            className=\"card-link btn btn-primary\"\n          >\n            Update\n          </Link>\n          <Link\n            to=\"#\"\n            className=\"card-link btn btn-primary\"\n            onClick={this.handleDelete.bind(\n              this,\n              projectIdentifier,\n              projectSequence\n            )}\n          >\n            Delete\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  projectTask,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, projectTask);\n\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({ type: GET_ERRORS, payload: {} });\n  } catch (error) {\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const getBacklog = (backlog_id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n\n    dispatch({ type: GET_BACKLOG, payload: res.data });\n    dispatch({ type: GET_ERRORS, payload: {} });\n  } catch (error) {\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  project_sequence,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(\n      `/api/backlog/${backlog_id}/${project_sequence}`\n    );\n\n    dispatch({ type: GET_PROJECT_TASK, payload: res.data });\n  } catch (error) {\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const updateProjectTask = (\n  projectTask,\n  backlog_id,\n  project_sequence,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(\n      `/api/backlog/${backlog_id}/${project_sequence}`,\n      projectTask\n    );\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({ type: GET_ERRORS, payload: {} });\n  } catch (error) {\n    dispatch({ type: GET_ERRORS, payload: error.response.data });\n  }\n};\n\nexport const deleteProjectTask = (\n  backlog_id,\n  project_sequence\n) => async dispatch => {\n  await axios.delete(`/api/backlog/${backlog_id}/${project_sequence}`);\n  dispatch({ type: DELETE_PROJECT_TASK, payload: project_sequence });\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\nimport { connect } from \"react-redux\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass Backlog extends Component {\n  componentDidMount() {\n    this.props.getBacklog(this.props.id, this.props.history);\n  }\n  renderTodoTask() {\n    const tasks = this.props.projectTasks.filter(\n      projectTask => projectTask.status === \"TO_DO\"\n    );\n    return tasks.map(projectTask => (\n      <ProjectTask\n        key={projectTask.id}\n        id={this.props.id}\n        projectTask={projectTask}\n      />\n    ));\n  }\n\n  renderInProgressTask() {\n    const tasks = this.props.projectTasks.filter(\n      projectTask => projectTask.status === \"IN_PROGRESS\"\n    );\n    return tasks.map(projectTask => (\n      <ProjectTask\n        key={projectTask.id}\n        id={this.props.id}\n        projectTask={projectTask}\n      />\n    ));\n  }\n\n  renderDoneTask() {\n    const tasks = this.props.projectTasks.filter(\n      projectTask => projectTask.status === \"DONE\"\n    );\n    return tasks.map(projectTask => (\n      <ProjectTask\n        key={projectTask.id}\n        id={this.props.id}\n        projectTask={projectTask}\n      />\n    ));\n  }\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-4\">\n          <div className=\"card\">\n            <div className=\"card-header bg-primary text-white text-center\">\n              To Do\n            </div>\n          </div>\n          {this.renderTodoTask()}\n        </div>\n        <div className=\"col-sm-4\">\n          <div className=\"card\">\n            <div className=\"card-header bg-primary text-white text-center\">\n              In Progress\n            </div>\n          </div>\n          {this.renderInProgressTask()}\n        </div>\n        <div className=\"col-sm-4\">\n          <div className=\"card\">\n            <div className=\"card-header bg-primary text-white text-center\">\n              Done\n            </div>\n          </div>\n          {this.renderDoneTask()}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps({ backlog: { projectTasks } }) {\n  return { projectTasks };\n}\n\nexport default connect(mapStateToProps, { getBacklog })(Backlog);\n","import React, { Component } from \"react\";\nimport CreateProjectTaskButton from \"./ProjectTasks/CreateProjectTaskButton\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\n\nclass ProjectBoard extends Component {\n  render() {\n    const { id } = this.props.match.params;\n    const renderAlertOrBacklog = () => {\n      if (this.props.errors.projectNotFound) {\n        return (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            {this.props.errors.projectNotFound}\n          </div>\n        );\n      } else {\n        return <Backlog id={id} history={this.props.history} />;\n      }\n    };\n\n    return (\n      <div className=\"container\">\n        <CreateProjectTaskButton id={id} />\n        {renderAlertOrBacklog()}\n      </div>\n    );\n  }\n}\nfunction mapStatToProps({ errors }) {\n  return { errors };\n}\nexport default connect(mapStatToProps)(ProjectBoard);\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialstate = {\n  projects: [],\n  project: {}\n};\nexport default function(state = initialstate, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  projectTasks: [],\n  projectTask: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        projectTasks: action.payload\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        projectTask: action.payload\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        projectTasks: state.projectTasks.filter(\n          projectTask => projectTask.projectSequence !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\n\nconst actionPayload = payload => {\n  if (payload) {\n    return true;\n  }\n  return false;\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: actionPayload(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { GET_ERRORS } from \"../actions/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload || \"\";\n\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\nconst reactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && reactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), reactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport classnames from \"classnames\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault(e);\n    const newProjectTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newProjectTask,\n      this.props.history\n    );\n  }\n  render() {\n    const { id } = this.props.match.params;\n    const { summary } = this.props.errors;\n    return (\n      <div style={{ width: \"50%\" }} className=\"container\">\n        <h1 style={{ textAlign: \"center\" }}>Add Project Task</h1>\n        <hr></hr>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": summary\n              })}\n              placeholder=\"Project Task Summary\"\n              name=\"summary\"\n              value={this.state.summary}\n              onChange={this.onChange}\n            />\n            <small className=\"invalid-feedback form-text\">{summary}</small>\n          </div>\n          <div className=\"form-group\">\n            <textarea\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Acceptance Criteria\"\n              name=\"acceptanceCriteria\"\n              value={this.state.acceptanceCriteria}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Due Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              name=\"dueDate\"\n              value={this.state.dueDate}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <select\n              className=\"form-control\"\n              name=\"priority\"\n              value={this.state.priority}\n              onChange={this.onChange}\n            >\n              <option value={0}>Select Priority</option>\n              <option value={3}>Low</option>\n              <option value={2}>Medium</option>\n              <option value={1}>High</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <select\n              className=\"form-control\"\n              name=\"status\"\n              value={this.state.status}\n              onChange={this.onChange}\n            >\n              <option value=\"\">Select Status</option>\n              <option value=\"TO_DO\">To Do</option>\n              <option value=\"IN_PROGRESS\">In Progress</option>\n              <option value=\"DONE\">Done</option>\n            </select>\n          </div>\n          <Link\n            to={`/projectBoard/${id}`}\n            className=\"btn btn-primary float-left\"\n          >\n            Back to Project Board\n          </Link>\n          <button type=\"submit\" className=\"btn btn-primary float-right\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps({ errors }) {\n  return { errors };\n}\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport classnames from \"classnames\";\n\nclass UpdateProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: \"\"\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updatedProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier\n    };\n\n    this.props.updateProjectTask(\n      updatedProjectTask,\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      this.props.history\n    );\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  componentDidMount() {\n    const { id, project_sequence } = this.props.match.params;\n    this.props.getProjectTask(id, project_sequence, this.props.history);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier\n    } = nextProps.projectTask;\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier\n    });\n  }\n  render() {\n    const { id } = this.props.match.params;\n    const { summary } = this.props.errors;\n    return (\n      <div style={{ width: \"50%\" }} className=\"container\">\n        <h1 style={{ textAlign: \"center\" }}>Update Project Task</h1>\n        <hr></hr>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className={classnames(\"form-control\", {\n                \"is-invalid\": summary\n              })}\n              placeholder=\"Project Task Summary\"\n              name=\"summary\"\n              value={this.state.summary}\n              onChange={this.onChange}\n            />\n            <small className=\"invalid-feedback form-text\">{summary}</small>\n          </div>\n          <div className=\"form-group\">\n            <textarea\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Acceptance Criteria\"\n              name=\"acceptanceCriteria\"\n              value={this.state.acceptanceCriteria}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Due Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              name=\"dueDate\"\n              value={this.state.dueDate}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <select\n              className=\"form-control\"\n              name=\"priority\"\n              value={this.state.priority}\n              onChange={this.onChange}\n            >\n              <option value={0}>Select Priority</option>\n              <option value={3}>Low</option>\n              <option value={2}>Medium</option>\n              <option value={1}>High</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <select\n              className=\"form-control\"\n              name=\"status\"\n              value={this.state.status}\n              onChange={this.onChange}\n            >\n              <option value=\"\">Select Status</option>\n              <option value=\"TO_DO\">To Do</option>\n              <option value=\"IN_PROGRESS\">In Progress</option>\n              <option value=\"DONE\">Done</option>\n            </select>\n          </div>\n          <Link\n            to={`/projectBoard/${id}`}\n            className=\"btn btn-primary float-left\"\n          >\n            Back to Project Board\n          </Link>\n          <button type=\"submit\" className=\"btn btn-primary float-right\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps({ errors, backlog: { projectTask } }) {\n  return { errors, projectTask };\n}\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start you own\n                </p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fullname: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const user = {\n      fullname: this.state.fullname,\n      username: this.state.username,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n    console.log(user);\n    this.props.createNewUser(user, this.props.history);\n  }\n\n  render() {\n    const { password, fullname, username, confirmPassword } = this.props.errors;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Sign Up</h1>\n            <p className=\"lead text-center\">Create your Account</p>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control\", {\n                    \"is-invalid\": fullname\n                  })}\n                  placeholder=\"Full Name\"\n                  name=\"fullname\"\n                  value={this.state.fullname}\n                  onChange={this.onChange}\n                />\n                <small className=\"invalid-feedback form-text\">{fullname}</small>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"email\"\n                  className={classnames(\"form-control\", {\n                    \"is-invalid\": username\n                  })}\n                  placeholder=\"Email Address\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.onChange}\n                />\n                <small className=\"invalid-feedback form-text\">{username}</small>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className={classnames(\"form-control\", {\n                    \"is-invalid\": password\n                  })}\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n                <small className=\"invalid-feedback form-text\">{password}</small>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className={classnames(\"form-control\", {\n                    \"is-invalid\": confirmPassword\n                  })}\n                  placeholder=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  value={this.state.confirmPassword}\n                  onChange={this.onChange}\n                />\n                <small className=\"invalid-feedback form-text\">\n                  {confirmPassword}\n                </small>\n              </div>\n\n              <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps({ errors, security }) {\n  return { errors, security };\n}\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/securityActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const loginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(loginRequest);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  renderAlert() {\n    if (this.props.errors.username === \"Invalid username\") {\n      return (\n        <div class=\"alert alert-danger\" role=\"alert\">\n          Invalid username/password\n        </div>\n      );\n    }\n  }\n\n  renderInvalidUsername() {\n    if (this.props.errors.username !== \"Invalid username\") {\n      return (\n        <small className=\"invalid-feedback form-text\">\n          {this.props.errors.username}\n        </small>\n      );\n    }\n  }\n  renderInvalidPassword() {\n    if (this.props.errors.username !== \"Invalid password\") {\n      return (\n        <small className=\"invalid-feedback form-text\">\n          {this.props.errors.password}\n        </small>\n      );\n    }\n  }\n\n  render() {\n    const { username, password } = this.props.errors;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 my-3 mx-auto\">\n            {this.renderAlert()}\n            <h1 className=\"display-4 text-center\">Login</h1>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"email\"\n                  className={classnames(\"form-control\", {\n                    \"is-invalid\": username\n                  })}\n                  placeholder=\"Email Address\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.onChange}\n                />\n                {this.renderInvalidUsername}\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  className={classnames(\"form-control\", {\n                    \"is-invalid\": password\n                  })}\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n                {this.renderInvalidPassword}\n              </div>\n\n              <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                Login\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps({ security, errors }) {\n  return { security, errors };\n}\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nfunction mapStateToProps({ security }) {\n  return { security };\n}\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJwtToken from \"./securityUtils/setJwtToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\n\nconst jwtToken = localStorage.getItem(\"jwtToken\");\nif (jwtToken) {\n  setJwtToken(jwtToken);\n  const decoded = jwt_decode(jwtToken);\n  store.dispatch({ type: SET_CURRENT_USER, payload: decoded });\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header />\n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n        <Switch>\n          <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n          <SecuredRoute exact path=\"/addproject\" component={AddProject} />\n          <SecuredRoute\n            exact\n            path=\"/updateproject/:id\"\n            component={UpdateProject}\n          />\n          <SecuredRoute\n            exact\n            path=\"/projectBoard/:id\"\n            component={ProjectBoard}\n          />\n          <SecuredRoute\n            exact\n            path=\"/addProjectTask/:id\"\n            component={AddProjectTask}\n          />\n          <SecuredRoute\n            exact\n            path=\"/updateProjectTask/:id/:project_sequence\"\n            component={UpdateProjectTask}\n          />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}